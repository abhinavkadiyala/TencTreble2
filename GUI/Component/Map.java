package component;

import java.util.*;


public class Map {
	int size;
	Set<GameObject> obj;
	public Map(int x, int y, int numPlayers) {
		// STILL NEED SOME WAY TO USE MAZE GENERATOR
		Wall [] wall = some set of walls generated by mazegenerator
		obj = new HashSet<GameObject>();
		size = dimension;
		for (Wall wall : maze){
			obj.add(wall);
		}
		point2D.Double[] locations = new point2D.Double[numPlayers];
		locations[0] = new Point2D.Double(2.5 + 5*Math.random(x), 2.5 + 5*Math.random(y));
		for (int i=1; i < numPlayers; i++){
			do{
				Point2D.Double nej = new Point2D.Double(2.5 + 5*Math.random(x), 2.5 + 5*Math.random(y));
			}while (for (int j = 0; j <i; j++){
				!nej.equals(locations[j]);
			}
		} //really ugly; not sure if it even works.
		for (int i = 0; i<numPlayers; i++){
			obj.add(new Tank (locations[i], this);
		}
		
			
		}
	}
	
	public Set<GameObject> getObjects(){
		return obj;
	}
	public void add(GameObject gObj) {
		obj.add(gObj);
	}
	public void remove(GameObject gObj) {
		obj.remove(gObj);
	}
	public Set<GameObject> objects() {
		return obj;
	}
	public void paint(Graphics2D g) {
		for (GameObject go : obj) {
			go.paint(g);
		}
	}
}
